"use strict";(self.webpackChunktreespider_doc=self.webpackChunktreespider_doc||[]).push([[5643],{5451:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>d,toc:()=>c});var r=n(4848),i=n(8453);n(6540),n(8777);const s={sidebar_position:12},o="Contributing",d={id:"contributing",title:"Contributing",description:"TreeSpider is still a work-in-progress and I am planning to make it better that it currently is, and your contribution is highly appreciated, and if you need a feature or want to add a tree type, a new chart head, a new link type or any other things you are welcome to contribute them, or if you noticed a bug you're welcome to create a pull request, your contributions are appreciated.",source:"@site/docs/contributing.mdx",sourceDirName:".",slug:"/contributing",permalink:"/treespider-doc/docs/contributing",draft:!1,unlisted:!1,editUrl:"https://github.com/paulosabayomi/treespider-doc/tree/main/docs/contributing.mdx",tags:[],version:"current",sidebarPosition:12,frontMatter:{sidebar_position:12},sidebar:"tutorialSidebar",previous:{title:"React JS",permalink:"/treespider-doc/docs/frameworks/react-js"}},a={},c=[{value:"Codebase short intro",id:"codebase-short-intro",level:2},{value:"Technologies used",id:"technologies-used",level:2},{value:"Getting started",id:"getting-started",level:2},{value:"Starting the project",id:"starting-the-project",level:2},{value:"Testing",id:"testing",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"contributing",children:"Contributing"})}),"\n",(0,r.jsx)(t.p,{children:"TreeSpider is still a work-in-progress and I am planning to make it better that it currently is, and your contribution is highly appreciated, and if you need a feature or want to add a tree type, a new chart head, a new link type or any other things you are welcome to contribute them, or if you noticed a bug you're welcome to create a pull request, your contributions are appreciated."}),"\n",(0,r.jsx)(t.h2,{id:"codebase-short-intro",children:"Codebase short intro"}),"\n",(0,r.jsxs)(t.p,{children:["TreeSpider is fully built with D3 and object oriented TypeScript, and it also uses rollup as the bundler, the source code is under the ",(0,r.jsx)(t.strong,{children:"src"})," directory and the output bundle is in the ",(0,r.jsx)(t.strong,{children:"dist"})," directory."]}),"\n",(0,r.jsx)(t.h2,{id:"technologies-used",children:"Technologies used"}),"\n",(0,r.jsx)(t.p,{children:"The following are the technologies used"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"D3.js"}),"\n",(0,r.jsx)(t.li,{children:"TypeScript"}),"\n",(0,r.jsx)(t.li,{children:"SCSS"}),"\n",(0,r.jsx)(t.li,{children:"rollup"}),"\n",(0,r.jsx)(t.li,{children:"babel"}),"\n",(0,r.jsx)(t.li,{children:"jest"}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"getting-started",children:"Getting started"}),"\n",(0,r.jsxs)(t.p,{children:["To get started to contribute, in a convenient directory on your computer, open the terminal and clone the ",(0,r.jsx)(t.a,{href:"https://github.com/paulosabayomi/treeSpider",children:"TreeSpider github repository"}),", then run ",(0,r.jsx)(t.code,{children:"npm i"})," to install all the dev dependencies, then install ",(0,r.jsx)(t.code,{children:"sass"})," globally with ",(0,r.jsx)(t.code,{children:"npm i -g sass"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"starting-the-project",children:"Starting the project"}),"\n",(0,r.jsxs)(t.p,{children:["To start the project, in the ",(0,r.jsx)(t.code,{children:"package.json"})," file check the list of commands under the ",(0,r.jsx)(t.code,{children:"scripts"})," property for all the commands needed for development and bundling, to start rollup bundler in watch-mode for development run"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"npm run rollup-watch\n"})}),"\n",(0,r.jsx)(t.p,{children:"Next, start the sass css compiler in watch mode by running"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"npm run sass\n"})}),"\n",(0,r.jsxs)(t.p,{children:["Then you are good to go and to start making changes, the single scss file is under the ",(0,r.jsx)(t.code,{children:"/scss"})," directory."]}),"\n",(0,r.jsx)(t.h2,{id:"testing",children:"Testing"}),"\n",(0,r.jsxs)(t.p,{children:["After development, testing is neccessary, to test you can either add some test cases to the already created test files under the ",(0,r.jsx)(t.code,{children:"/__test__"})," directory or create new test files, after creating the tests or if no tests were added, run"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"npm run test\n"})}),"\n",(0,r.jsx)(t.p,{children:"If all tests passed, then you can create a pull request, no need for bundling as it will be bundled with GitHub Actions after it has been merged."})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>d});var r=n(6540);const i={},s=r.createContext(i);function o(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);